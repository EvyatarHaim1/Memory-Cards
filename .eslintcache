[{"C:\\Users\\Evyat\\home\\Worked-Projects\\memory-cards-react\\src\\index.js":"1","C:\\Users\\Evyat\\home\\Worked-Projects\\memory-cards-react\\src\\reportWebVitals.js":"2","C:\\Users\\Evyat\\home\\Worked-Projects\\memory-cards-react\\src\\App.js":"3","C:\\Users\\Evyat\\home\\Worked-Projects\\memory-cards-react\\src\\containers\\Menu.js":"4","C:\\Users\\Evyat\\home\\Worked-Projects\\memory-cards-react\\src\\components\\BuildNewPack\\BuildNewPack.js":"5","C:\\Users\\Evyat\\home\\Worked-Projects\\memory-cards-react\\src\\components\\CustomPacks\\CustomPacks.js":"6","C:\\Users\\Evyat\\home\\Worked-Projects\\memory-cards-react\\src\\components\\DefaultPacks\\DefaultPacks.js":"7","C:\\Users\\Evyat\\home\\Worked-Projects\\memory-cards-react\\src\\components\\BuildNewPack\\NewPackViewLoader.js":"8","C:\\Users\\Evyat\\home\\Worked-Projects\\memory-cards-react\\src\\components\\DefaultPacks\\packsImages.js":"9","C:\\Users\\Evyat\\home\\Worked-Projects\\memory-cards-react\\src\\store\\actions\\index.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":1035,"mtime":1610302017107,"results":"14","hashOfConfig":"12"},{"size":1090,"mtime":1603806551491,"results":"15","hashOfConfig":"12"},{"size":2845,"mtime":1603715883545,"results":"16","hashOfConfig":"12"},{"size":196,"mtime":1603449965748,"results":"17","hashOfConfig":"12"},{"size":437,"mtime":1610302562269,"results":"18","hashOfConfig":"12"},{"size":895,"mtime":1603651569274,"results":"19","hashOfConfig":"12"},{"size":222,"mtime":1603990608088,"results":"20","hashOfConfig":"12"},{"size":93,"mtime":1603649539547,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"2jrq58",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\Evyat\\home\\Worked-Projects\\memory-cards-react\\src\\index.js",[],["45","46"],"C:\\Users\\Evyat\\home\\Worked-Projects\\memory-cards-react\\src\\reportWebVitals.js",[],"C:\\Users\\Evyat\\home\\Worked-Projects\\memory-cards-react\\src\\App.js",[],"C:\\Users\\Evyat\\home\\Worked-Projects\\memory-cards-react\\src\\containers\\Menu.js",[],"C:\\Users\\Evyat\\home\\Worked-Projects\\memory-cards-react\\src\\components\\BuildNewPack\\BuildNewPack.js",["47","48","49"],"import React,{useState} from 'react';\r\nimport {Input, Button, Container} from '@material-ui/core/';\r\nimport styled from 'styled-components';\r\nimport NewPackViewLoader from './NewPackViewLoader';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {buildNewBoard} from '../../store/actions/index'\r\n\r\n const BuildNewPack = () => {\r\n  \r\n       const [Board,setBoard] = useState([]);\r\n       const newBoard = useSelector(state => state.buildNewBoard);\r\n       const isLogged = useSelector(state => state.isLogged);\r\n       const dispatch = useDispatch\r\n\r\n   const handleInput = (e) => {\r\n        console.log(e.target.files[0])\r\n       console.log(e.target.name)\r\n       setBoard([...Board, e.target.files[0]] )\r\n   }\r\n    \r\n        return (\r\n            <DIV>\r\n               <H1>LOAD 8 IMAGES AND CREATE YOUR OWN BOARD </H1>\r\n               <BUTTON onClick={()=> dispatch(buildNewBoard())}> BUILD YOUR BOARD</BUTTON>\r\n               <NEWPACKVIEWLOADER images={Board} />\r\n            <ImagesContainer>\r\n              <INPUT type=\"file\" \r\n                      name=\"one\" \r\n                      onChange={(e)=> handleInput(e)}>\r\n              </INPUT>\r\n              <INPUT type=\"file\" \r\n                      name=\"two\" \r\n                      value=''\r\n                      onChange={(e)=> handleInput(e)}>\r\n               </INPUT>\r\n               <INPUT type=\"file\" \r\n                      name=\"three\"\r\n                      onChange={(e)=> handleInput(e)}>\r\n               </INPUT>\r\n               <INPUT type=\"file\" \r\n                      name=\"four\" \r\n                      onChange={(e)=> handleInput(e)}>\r\n               </INPUT>\r\n               <INPUT type=\"file\" \r\n                      name=\"five\" \r\n                      onChange={(e)=> handleInput(e)}>\r\n               </INPUT>\r\n               <INPUT type=\"file\" \r\n                      name=\"six\" \r\n                      onChange={(e)=> handleInput(e)}>\r\n               </INPUT>\r\n               <INPUT type=\"file\" \r\n                      name=\"seven\" \r\n                      onChange={(e)=> handleInput(e)}>\r\n               </INPUT>\r\n               <INPUT type=\"file\" \r\n                      name=\"eight\" \r\n                      onChange={(e)=> handleInput(e)}>\r\n               </INPUT>\r\n            </ImagesContainer>\r\n            </DIV>\r\n        )\r\n    }\r\n    export default BuildNewPack;\r\n    \r\n    const H1 = styled.h1` margin-top: 70px;`\r\n\r\n    const ImagesContainer = styled.div`\r\n    display: grid;\r\n    margin-top: 20px;\r\n    grid-template-rows: repeat(8,1fr);`\r\n    \r\n    const INPUT = styled(Input)`width: 200px; margin-left: 100px; height: 50px;`\r\n\r\n    const NEWPACKVIEWLOADER = styled(NewPackViewLoader)`padding: 50px;`\r\n    const BUTTON = styled(Button)`background-color:#808080; `\r\n\r\n    const DIV = styled.div`background-color:#d8ab4e; height: 550px;`\r\n\r\n","C:\\Users\\Evyat\\home\\Worked-Projects\\memory-cards-react\\src\\components\\CustomPacks\\CustomPacks.js",[],"C:\\Users\\Evyat\\home\\Worked-Projects\\memory-cards-react\\src\\components\\DefaultPacks\\DefaultPacks.js",["50"],"C:\\Users\\Evyat\\home\\Worked-Projects\\memory-cards-react\\src\\components\\BuildNewPack\\NewPackViewLoader.js",["51"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {useSelector} from 'react-redux';\r\n\r\n const NewPackViewLoader = (props) => {\r\n    const newBoard = useSelector(state => state.buildNewBoard);\r\n  return (\r\n      <Div>\r\n          <img src={props.images} alt=\"1\" />\r\n      </Div>\r\n  )\r\n }\r\n export default NewPackViewLoader;\r\n\r\n//  const mapStateToProps = state => {\r\n//     return {\r\n//       newBoardCards : state.newBoardCards\r\n//     }\r\n//   }\r\n  \r\n//   const mapDispatchToProps = dispatch => {\r\n//     return {\r\n//       updateNewBoard(newBoard){\r\n//         dispatch({\r\n//           type: \"UPDATE_NEW_BOARD\",\r\n//           payload: newBoard\r\n//         })\r\n//       }\r\n//     }\r\n//   }\r\n  \r\n\r\n\r\n\r\n\r\n    const Div = styled.div`\r\n    background-color: black;\r\n    color: white;\r\n    width: 850px;\r\n    height: 500px;\r\n    float: right;\r\n    margin-right: 200px;\r\n    `","C:\\Users\\Evyat\\home\\Worked-Projects\\memory-cards-react\\src\\components\\DefaultPacks\\packsImages.js",[],"C:\\Users\\Evyat\\home\\Worked-Projects\\memory-cards-react\\src\\store\\actions\\index.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":2,"column":24,"nodeType":"58","messageId":"59","endLine":2,"endColumn":33},{"ruleId":"56","severity":1,"message":"60","line":11,"column":14,"nodeType":"58","messageId":"59","endLine":11,"endColumn":22},{"ruleId":"56","severity":1,"message":"61","line":12,"column":14,"nodeType":"58","messageId":"59","endLine":12,"endColumn":22},{"ruleId":"56","severity":1,"message":"62","line":6,"column":11,"nodeType":"58","messageId":"59","endLine":6,"endColumn":18},{"ruleId":"56","severity":1,"message":"60","line":6,"column":11,"nodeType":"58","messageId":"59","endLine":6,"endColumn":19},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'newBoard' is assigned a value but never used.","'isLogged' is assigned a value but never used.","'Animals' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]